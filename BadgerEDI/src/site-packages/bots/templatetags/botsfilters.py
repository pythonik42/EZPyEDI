from django import template
from badgerEDI.X12Codes import X12Decoder
from bots import botsglobal 

register = template.Library()

@register.filter
def url2path(value):
    if value.startswith('/admin/bots/'):
        value = value[12:]
    else:
        value = value[1:]
    if value:
        if value[-1] == '/':
            value = value[:-1]
    else:
        value = 'home'
    return value

@register.filter
def toStatusT(value):
    # from botsconfig.py
    #
    #OPEN    = 0 #Bots always closes transaction. OPEN is severe error
    #ERROR   = 1 #error in transaction.
    #OK      = 2 #succesfull, result is 'save'. But procesing has stopped: next step with error, or no next steps defined
    #DONE    = 3 #succesfull, and result is picked up by next step
    #~ RETRANSMIT = 4   #reinjected archive edi-file

    statusT = ['[Severe Error]', '[Error]', '[Blocked]', '[Done]', '[Retransmit]']
    return statusT[value]
    
@register.filter
def fmtErrorTxt(txt):
    
    txtLines = txt.splitlines()
    newLines = list()
    for line in txtLines:
        print '= Line is %s' % (line,)
        if line.startswith('  File') or line.startswith('Traceback'):
            newLine = '<strong>%s</strong>' % (line,)
        else:
            newLine = '&nbsp;&nbsp;&nbsp;&nbsp;%s' % (line,)
        newLines.append(newLine)
    return '\n'.join(newLines)
    
@register.filter
def decodeX12(code, mapID):
    
    if mapID in X12Decoder:
        decoder = X12Decoder[mapID]
        if code in decoder:
            return decoder[code]
        else:
            return code
    else:
        return code
    
@register.filter
def ediDate(ediDate):
    
    dateStr = str(ediDate)
    if not dateStr or not (len(dateStr)==6 or len(dateStr)==8):
        return dateStr # cannot reformat
    if len(dateStr)==6:
        # YYMMDD, so prepend '20'
        dateStr = '20'+dateStr
    yyyy = dateStr[:4]
    mm = dateStr[4:6]
    dd = dateStr[6:]
    
    return '%s/%s/%s' % (mm, dd, yyyy)

@register.filter
def ediTime(ediTime):
    
    timeStr = str(ediTime).zfill(4)
    if timeStr and len(timeStr)==4:
        hh24 = timeStr[:2]
        mm24 = timeStr[2:]        
        return '%s:%s' % (hh24, mm24)
    else:
        return strTime # cannot reformat

@register.filter
def botslogo(defaultlogo):
     return botsglobal.ini.get('webserver','botslogo',defaultlogo)
 
    
    