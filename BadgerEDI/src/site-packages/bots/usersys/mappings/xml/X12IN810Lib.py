'''
Classes and functions to support generation of X12 SH856 docs

@author: jknaus
'''

from badgerEDI import eLog

from badgerEDI.bedislib import *
from badgerEDI.ediutil import *

from bots.transform import *

class INEdiMgr(EdiMgr):
    
    def __init__(self, joDocType=None, joRefNum=None):
        super(INEdiMgr, self).__init__(joDocType, joRefNum)
    
    def addAdditionalInvoiceAttributes(self, invoice):
        
        ship = invoice.Shipment
        so = invoice.SalesOrder
        po = invoice.PurchaseOrder
        lineItems = invoice.LineItems
        car = ship.Carrier
        
        # strip off shipoTo suffix appended to drop ship/SDQ segment identified location PO numbers
        if po.Number and '-' in po.Number:  
            (originalPO, locationID) = po.Number.split('-',1)
            po.Number = originalPO  # now PO number matches customer's PO number
            
        # count num of items shipped
        numShipped = Decimal('0')
        for li in lineItems:
            numShipped += Decimal(li.Quantity)
        invoice.TotalNumberOfItems = numShipped
        
        # reorganize raw WoredPad note values as dictionary of values keyed by var name
        so.ExtraEdiInfo = self.getExtraEdiValuesDict(so.ExtraEdiInfo)
        
        # map ExtraEdiValues from salesOrder to Business Object tree
        # note: eventually these will be populated from Jomar table data by the 
        # edi_GenShippingNoticeXML stored proc and will arrive as structured XML values like everything else 
        eeInfoMappings = [
            (car,     'RoutingNumber',                'ShipmentRoutingNum'),
            (car,     'BOLNumber',                    'CarrierBOL'),
            (ship,    'Cubes',                        'Cubes'),
            (ship,    'EstimatedDeliveryDate',        'EstDeliveryDate'),
            (ship,    'ScheduledDeliveryDate',        'SchedDeliveryDate'),
            (ship,    'TPBillingAcct',                'TPBillingAcct'),
            ]
        for (bo, dynOKey, eeInfoKey) in eeInfoMappings:
            if bo:
                bo[dynOKey] = so.ExtraEdiInfo.get(eeInfoKey, None)
    
