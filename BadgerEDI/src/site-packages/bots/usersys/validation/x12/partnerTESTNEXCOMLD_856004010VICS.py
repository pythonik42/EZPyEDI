# vendor X12 856 4010 VICS validation rules for NEXCOMLD (the Naval Exchange)

from base_856004010VICS import fieldDescriptions, namedSegmentFormats

def getOutDocMap(out):
    return OutDocTreeMap(
        out, 'ST',
        ST01='856',
        ST02='@DocReferenceID',
        BSN=Seg(
            BSN01='@X12.ShipNoticeTypeCode',
            BSN02='@SHIPM.MasterBOL or SHIPM.Carrier.BOLNumber or (SHIPM.Order.PONumber and eMgr.getCustomerPONumber(SHIPM.Order.PONumber))',
            BSN03='@DateToday',
            BSN04='@TimeNow',
            BSN05='@X12.HierarchicalStructureCode',
            ),
        HL=ForLoop(
            'SHIP', '[SHIPM]',
            HL01='@IDGen.nextHSLevel1ID()',
            HL03='@X12.HSLevel1Code',
            TD1=Seg(
                TD101='@If(SHIP.NumberOfCartons, X12.PackagingTypeCode)',
                TD102='@SHIP.NumberOfCartons',
                TD106='@If(SHIP.Weight, X12.WeightQualifier)',
                TD107='@SHIP.Weight',
                TD108='@X12.WeightUnitOfMeasure',
                ),
            TD5=SegList(
                _Y_USES='SCAC',
                _SCAC=Seg(
                    _Y_IF='@SHIP.Carrier.Code or SHIP.Carrier.Name',
                    TD502='@SHIP.Carrier.Code and X12.CarrierCodeQualifier',
                    TD503='@X12.CarrierCodeToSCAC.get(SHIP.Carrier.Code, SHIP.Carrier.Code)',
                    TD505='@SHIP.Carrier.Name'),
                ),
            REF=SegList(
                _Y_USES='BOLN,PREFN',
                    # for LTL or long-haul Trucks: Carrier BOL Number and Carrier Pro Number
                    # sometimes both are used                
                _BOLN=Seg(
                    _Y_IF='@X12.IsLTLOrTruckCarrier.get(SHIP.Carrier.Code, None)',
                    REF01='BM', 
                    REF02='@SHIP.Carrier.BOLNumber'),
                # for parcel carriers: Pickup Ref Number or Tracking Number
                # use only one of these at a time
                _PREFN=Seg(
                    _Y_IF='@X12.IsParcelCarrier.get(SHIP.Carrier.Code, None)',
                    REF01='P8', 
                    REF02='@SHIP.Carrier.PickupReferenceNumber'),
                ),
            DTM=SegList(
                _Y_USES='DSHP,SDLV',
                _DSHP=Seg(
                    _Y_IF='@SHIP.ShipDate',
                    DTM01='011', 
                    DTM02='@SHIP.ShipDate'),
                _SDLV=Seg(
                    _Y_IF='@SHIP.ScheduledDeliveryDate',
                    DTM01='067', 
                    DTM02='@SHIP.ScheduledDeliveryDate'),
                ),
            N1=SegList(
                _Y_USES='ST,STWH',
                _ST=Seg(
                    _Y_IF='@not XDOCK and SHIP.ShipTo',
                    N101='ST', 
                    N102='@SHIP.ShipTo.Name',
                    N103='92', 
                    N104='@SHIP.ShipTo.LocID',     
                    ),
                _STWH=Seg(
                    _Y_IF='@XDOCK',
                    N101='ST', 
                    N102='@XDOCK.Name',
                    N103='92', 
                    N104='@XDOCK.LocID',
                    ),
                ),
            HL=ReRootAtOutSeg(
                'ST',
                ForLoop(
                    'SO', '[sh.Order for sh in SHIPM.ShipmentDetails]',
                    HL01='@IDGen.nextHSLevel2ID()', 
                    HL02='@IDGen.lastHSLevel1ID()', 
                    HL03='@X12.HSLevel2Code',
                    PRF=Seg(
                        PRF01='@SO.PONumber', 
                        PRF04='@SO.PODate',
                        ),
                    TD1=Seg(
                        TD101='@If(SO.Shipment.NumberOfCartons, X12.PackagingTypeCode)',
                        TD102='@SO.Shipment.NumberOfCartons',
                        TD106='@If(SO.Shipment.Weight, X12.WeightQualifier)',
                        TD107='@SO.Shipment.Weight',
                        TD108='@X12.WeightUnitOfMeasure',
                        ),
                    REF=SegList(
                        _Y_USES='IVN',
                        _IVN=Seg(
                            _Y_IF='@VEN.DUNSNumber', 
                            REF01='IA', 
                            REF02='@VEN.DUNSNumber.zfill(11)'),
                        ),
                    N1=SegList(     # optional
                        _Y_USES='BY',
                        # used when shipment type is 'cross dock'
                        # contains ultimate destination (store) for the shipment 
                        _BY=Seg(
                            _Y_IF='@XDOCK and SO.ShipTo',
                            N101='BY', 
                            N102='@SO.ShipTo.Name',
                            N103='92', 
                            N104='@SO.ShipTo.LocID'),
                        ),
                    HL=ReRootAtOutSeg(
                        'ST',
                        ForLoop(
                            'CASEID', 'SO.ExtraPackingDetails.getCaseIDsOnPS()',
                            HL01='@IDGen.nextHSLevel3ID()', 
                            HL02='@IDGen.lastHSLevel2ID()', 
                            HL03='@X12.HSLevel3Code',
                            MAN=Seg(
                                MAN01='@X12.MarksAndNumbersQualifier', 
                                MAN02='@CASEID',
                                ),
                            HL=ReRootAtOutSeg(
                                'ST',
                                ForLoop(
                                    'IT', 'SO.ExtraPackingDetails.getPacksInCase(CASEID)',
                                    HL01='@IDGen.nextHSLevel4ID()', 
                                    HL02='@IDGen.lastHSLevel3ID()', 
                                    HL03='@X12.HSLevel4Code',
                                    LIN=Seg(
                                        LIN02='UP',     
                                        LIN03='@IT.UPCCode or "None"',
                                        LIN04='VA',
                                        LIN05='@IT.VendorStyleCode',
                                        ),
                                    SN1=Seg(
                                        SN102='@SO.ExtraPackingDetails.getQtyPacked(IT)',  
                                        SN103='@IT.UnitOfMeasure or X12.ItemUnitOfMeasure',
                                        ),
                                    )),# _Items
                            )),  # _PackS
                    )), # _Orders
            ), #_Shipment
        )

from badgerEDI.rules import *

contentRules = [         
    ('ST',                                 RReqs('ST01', 'ST02', 'BSN', 'HL')),
    ('ST.ST01',                            RMustBe('856')),
    
    ('ST.BSN',                             RReqs('BSN01', 'BSN02', 'BSN03', 'BSN04', 'BSN05')),
    ('ST.BSN.BSN01',                       RMustBe('00')),
    ('ST.BSN.BSN05',                       RMustBe('0001')),
    
    ('ST.HL*',                             RReqs('HL01', 'HL03', 'TD1', 'TD5', 'REF', 'N1', 'DTM', 'HL')),
    ###################
    ('ST.HL*.HL03',                        RMustBe('S')),
    ('ST.HL*.TD1',                         RReqs('TD101', 'TD102', 'TD106', 'TD107', 'TD108')),
    ('ST.HL*.TD1',                         RCond('TD101', 'TD102')),
    ('ST.HL*.TD1',                         RCond('TD106', 'TD107')),
    ('ST.HL*.TD1',                         RAtomic('TD107', 'TD108')),
    ('ST.HL*.TD1.TD101',                   RMustBe('CTN25')),
    ('ST.HL*.TD1.TD106',                   RMustBe('G')),
    ('ST.HL*.TD1.TD108',                   RValueIn('KG','LB')),
    
    ('ST.HL*.TD5',                         RReqs('_SCAC')),
    ('ST.HL*.TD5*',                        RCond('TD502', 'TD503')),
    ('ST.HL*.TD5?_SCAC',                   RReqs('TD503', 'TD505')),
    ('ST.HL*.TD5?_SCAC',                   RCond('TD502', 'TD503')),
    ('ST.HL*.TD5?_SCAC.TD502',             RMustBe('2')),
    
    ('ST.HL*.REF',                         ROneOf('_CARN', '_PREFN')),
    ('ST.HL*.REF',                         RAtomic('_BOLN', '_CARN')),
    ('ST.HL*.REF?_BOLN',                   RReqs('REF01', 'REF02')),
    ('ST.HL*.REF?_BOLN.REF01',             RMustBe('BM')),
    ('ST.HL*.REF?_CARN',                   RReqs('REF01', 'REF02')),
    ('ST.HL*.REF?_CARN.REF01',             RMustBe('CN')),
    ('ST.HL*.REF?_PREFN',                  RReqs('REF01', 'REF02')),
    ('ST.HL*.REF?_PREFN.REF01',            RMustBe('P8')),
    ('ST.HL*.REF?_TRACKN',                 RReqs('REF01', 'REF02')),
    ('ST.HL*.REF?_TRACKN.REF01',           RMustBe('2I')),
    
    ('ST.HL*.N1',                          ROneOf('_ST','_STWH')),
    ('ST.HL*.N1*',                         RReqs('N101','N102', 'N103', 'N104')),
    ('ST.HL*.N1?_ST.N101',                 RMustBe('ST')),
    ('ST.HL*.N1?_ST.N103',                 RMustBe('92')),
    ('ST.HL*.N1?_STWH.N101',               RMustBe('ST')),
    ('ST.HL*.N1?_STWH.N103',               RMustBe('92')),
    
    ('ST.HL*.DTM',                         RReqs('_DSHP', '_SDLV')),
    ('ST.HL*.DTM?_DSHP',                   RReqs('DTM01', 'DTM02')),
    ('ST.HL*.DTM?_DSHP.DTM01',             RMustBe('011')),
    ('ST.HL*.DTM?_SDLV',                   RReqs('DTM01', 'DTM02')),
    ('ST.HL*.DTM?_SDLV.DTM01',             RMustBe('067')),
    
    ('ST.HL*.HL*',                         RReqs('HL01', 'HL02', 'HL03', 'PRF', 'REF', 'TD1', 'HL[1-200000]')),
    ###################
    ('ST.HL*.HL*.HL03',                    RMustBe('O')),                
    
    ('ST.HL*.HL*.N1?_BY',                  RReqs('N101', 'N102', 'N103', 'N104')),
    ('ST.HL*.HL*.N1?_BY.N101',             RMustBe('BY')),
    ('ST.HL*.HL*.N1?_BY.N103',             RMustBe('92')),
    
    ('ST.HL*.HL*.PRF',                     RReqs('PRF01')),

    ('ST.HL*.HL*.REF',                     RReqs('_IVN')),
    ('ST.HL*.HL*.REF*',                    RReqs('REF01', 'REF02')),
    ('ST.HL*.HL*.REF?_IVN.REF01',          RMustBe('IA')),
    
    ('ST.HL*.HL*.TD1',                     RReqs('TD101', 'TD102', 'TD106', 'TD107', 'TD108')),
    ('ST.HL*.HL*.TD1.TD101',               RMustBe('CTN25')),
    ('ST.HL*.HL*.TD1.TD106',               RMustBe('G')),
    ('ST.HL*.HL*.TD1.TD108',               RValueIn('KG','LB')),
    
    ('ST.HL*.HL*.HL*',                     RReqs('HL01', 'HL02', 'HL03', 'MAN', 'HL[1-200000]')),
    ####################
    ('ST.HL*.HL*.HL*.HL03',                RValueIn('P','T')),
                    
    ('ST.HL*.HL*.HL*.MAN',                 RReqs('MAN01', 'MAN02')),
    ('ST.HL*.HL*.HL*.MAN',                 RAtomic('MAN04', 'MAN05')),
    ('ST.HL*.HL*.HL*.MAN.MAN01',           RMustBe('GM')),      
    ('ST.HL*.HL*.HL*.MAN.MAN04',           RMustBe('CP')),
                
    ('ST.HL*.HL*.HL*.HL*',                 RReqs('HL01', 'HL02', 'HL03', 'LIN', 'SN1')),
    ####################
    ('ST.HL*.HL*.HL*.HL*.HL03',            RMustBe('I')),
                   
    ('ST.HL*.HL*.HL*.HL*.LIN',             RReqs('LIN02', 'LIN03', 'LIN04', 'LIN05')),
    ('ST.HL*.HL*.HL*.HL*.LIN.LIN02',       RMustBe('UP')),                
    ('ST.HL*.HL*.HL*.HL*.LIN.LIN04',       RMustBe('VA')),   
                 
    ('ST.HL*.HL*.HL*.HL*.SN1',             RReqs('SN102', 'SN103')),
    ('ST.HL*.HL*.HL*.HL*.SN1.SN103',       RMustBe('EA')),                
 ]