'''
Session logging and email

@author: JKnaus
'''

import bots.botsglobal

def sendEDIErrorReport(subject,reporttext):
    
    if botsglobal.ini.getboolean('settings','sendreportiferror',False):
        from django.core.mail import mail_managers
        try:
            mail_managers(subject, reporttext)
        except:
            botsglobal.logger.debug(u'Error in sending error report: %s',txtexc())

def log_session(f):
    ''' Used as decorator.
        The decorated functions are logged as processes.
        Errors in these functions are caught and logged.
    '''
    def wrapper(*args,**argv):
        try:
            ta_session = NewProcess(f.__name__)
        except:
            botsglobal.logger.exception(u'System error - no new session made')
            raise
        try:
            terug =f(*args,**argv)
        except:
            txt=txtexc()
            botsglobal.logger.debug(u'Error in process: %s',txt)
            ta_session.update(statust=ERROR,errortext=txt)
        else:
            ta_session.update(statust=DONE)
            return terug
    return wrapper


def txtexc():
    ''' Get text from last exception    '''
    
    if botsglobal.ini:
        if botsglobal.ini.getboolean('settings','debug',False):
            limit = None
        else:
            limit=0
    else:
        limit=0
        
    #problems with char set for some input data that are reported in traces....so always decode this; 
    terug = traceback.format_exc(limit).decode('utf-8','ignore')
    #~ botsglobal.logger.debug(u'exception %s',terug)
    if hasattr(botsglobal,'dbinfo') and botsglobal.dbinfo.drivername != 'sqlite':    #sqlite does not enforce strict lengths
        return terug[-2047:]
    else:
        return terug
