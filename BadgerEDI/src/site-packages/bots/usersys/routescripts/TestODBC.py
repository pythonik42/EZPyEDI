'''
For testing ODBC driver issues.

@author: jknaus
'''

from sqlalchemy import *

import os
import traceback

def txtexc():
    return traceback.format_exc()

def execSP(conn, spName):
    print 'Exec SP [%s]' % (spName,)
    trans = conn.begin()
    try:
        results = conn.execute(text(spName))
        resultRows = list()
        if not results.closed:
            for row in results:
                print row
                resultRows.append(row)
        trans.commit()
        print 'SP execution finished.'
        return resultRows        
    except:
        print 'A SQL error occurred during execution of SP.'
        trans.rollback()
        raise

if __name__=='__main__':
   
    print 'Executing TestODBC'
    
    # detect OS and DB driver being used
    if os.name=='nt': # OS is windows
        print 'Detected that host OS is Windows. Using Microsoft MS SQL Server Native ODBC driver.'
    else:             # OS is Linux
        print 'Detected that host OS is Linux. Using Progress DataDirect Native MS SQL ODBC driver.'

    # setup DB connect parameters
    print 'PRODUCTION PRODUCTION *** Using JOMAR Production DB ***'
    UNAME = 'sa'
    UPASS = 'brent'
    DBNAME = 'JoProdDB'
    url = 'mssql://%s:%s@%s' % (UNAME, UPASS, DBNAME)
    
    # create the engine and metadata for SqlAlchemy
    JoEngine = create_engine(url)
    
    conn = JoEngine.connect()
    trans = conn.begin()
    try:
        ixRows = execSP(conn, "dbo.edi_GenInvoiceXML 'SPSMCX', 'ZZ', '0000872409', 'P'")
        trans.commit()
        invXMLText = ixRows[0][0]
        print 'Result XML returned by SP ================================================'
        print invXMLText
        print 'End of results ==========================================================='
    except:
        txt=txtexc()
        trans.rollback()
        print 'TestODBC processing failed! Rolling back transaction.\n%s' % (txt,)
    finally:
        print 'TestODBC processing was uneventful.'
        conn.close()
